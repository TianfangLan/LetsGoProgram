==== A2 phase I marking ====
Your assignment is marked by:
Bryan Tam, bryan.tam@mail.utoronto.ca

Group number: 399
UTORID usernames of members: daixian1, lantianf, wangj398, xujunxin
Total deductions: -7
Grade: C

Your team's Phase II grade is based on this scale:

    http://www.artsci.utoronto.ca/newstudents/transition/academic/grading

The way we graded is as follows: your team starts with an A+. When errors and
problems are found, you will lose 0, 1, 2, or 3 letter steps, depending on the
severity. As an example, if you lost two steps, your team would earn an A-:

     A+ -> A
     A -> A-

You were asked to follow the Scrum process. A big part of that is to maintain
a product backlog and a sprint backlog.

==== Product and Sprint backlogs ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]  No evidence of Product or Sprint backlog -6
- [ ]  No evidence of team assigning tasks to team members -3
- [x]  SB items not taken directly from PB -1
- [ ]  SB items not broken down into smaller steps -1
- [ ]  PB, SB uses noticeably bad grammar and/or spelling -2

TA COMMENTS:
SB items not taken from PB: e.g. Interact with the FileSystem
Also, in Sprint 2, a and c are duplicated

[Total deductions in this section: -1]

==== Java Style ==== [up to -6]

Steps can be lost for these kinds of issues:

- [ ]  Java naming conventions not followed (camelCase, no_underscores) -1
- [ ]  Instance variable names not meaningful (e.g., "Label1" is not a good name) -1
- [ ]  Bad indentation -1
- [ ]  Lack of consistency in style across files -1
- [ ]  Bad use of whitespace: too much or too little -1
- [ ]  Class names are frequently not noun phrases -1
- [ ]  Method names are frequently not verb phrases -1
- [ ]  Not following the 80character column width limit. -1

[Total deductions in this section: 0]

==== Design ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]  public instance variables instead of setters and getters -1 to -2
- [ ]  not a good breakdown of classes and methods (everything static;) -1
- [ ]  long methods exist (more than roughly 30 lines from brace to brace) -1
- [ ]  hard to add new commands -1
- [ ]  no unified path handling mechanism -2
- [x]  redirection doesn't easily incorporate new commands -2

TA COMMENTS:
redirection handling is implemented inside argument parsing of echo, which makes it hard to add new commands.

[Total deductions in this section: -2]

==== Javadoc ==== [up to -3]

Several steps can be lost for these kinds of issues:

- [x]  Missing Javadoc on methods -1 for infrequent problems, up to -3 for frequent [-1]
- [ ]  Missing Javadoc on class -1
- [ ]  No Javadoc on instance vars -1
- [ ]  Missing use @param and @return tags -1
- [ ]  Unclear English: bad grammar, bad spelling up to -2

TA COMMENT: Methods missing Javadoc in CommandStatus and Mapper

[Total deductions in this section: -1]

==== Correctness ==== [up to -6]

- [ ]  Code doesn't compile without modification (if the fix is simple) -1
- [ ]  Code that is complete (from the SB) doesn't work completely: up to -2
- [ ]  Code crashes: -3
- [x]  Every 3 failed test cases -1 [-3]

TA COMMENTS:
history should show line numbers. Refer to assignment handout for format description.
Failed Testcases [10]:
1. ls a file
Input:
echo "hello" > test
ls test
Expected:
test
Actual:
Exception in thread "main" java.lang.NullPointerException
        at jshell.files.FileSystem.list(Unknown Source)
        at jshell.jshellcore.Ls.excute(Unknown Source)
        at driver.JShell.run(Unknown Source)
        at driver.JShell.main(Unknown Source)

2. ls multiple directories
Input:
mkdir a
mkdir a/b
ls a a/b
Expected:
a:
b

b:

Actual:
ls: a a/b: no such file or directory

3. mkdir without arg
Input:
mkdir
Expected:
Invalid argument (or similar error
Actual:
 already exists

4. cd with no arg
Input:
cd
Expected:
(error message)
Actual:
(no output)

5. cd into file
Input:
echo "hello" > test
cd test
Expected:
(error message)
Actual:
> pwd
/test

6. pushd with no arg
Input:
pushd
Expected:
(error message)
Actual:
(no output)

7. history with invalid number
Input:
history -1
Expected:
(error message)
Actual:
(no output)

8. echo with no arg
Input:
echo
Expected:
(error message)
Actual:
(no output)

9. echo without quotation
Input:
echo hello
Expected:
(error message)
Actual:
hello

10. echo with quotation
Input:
echo "hello"
Expected:
hello
Actual:
"hello"

[Total deductions in this section: -3]
